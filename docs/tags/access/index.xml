<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Access on YAMAMOTO MASAHIRO</title>
    <link>https://amomoan.github.io/portfolio/tags/access/</link>
    <description>Recent content in Access on YAMAMOTO MASAHIRO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 16 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://amomoan.github.io/portfolio/tags/access/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>教職管理システム</title>
      <link>https://amomoan.github.io/portfolio/posts/teacher_course_manager/</link>
      <pubDate>Sun, 16 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://amomoan.github.io/portfolio/posts/teacher_course_manager/</guid>
      <description>概要 担当者が多くのExcelやWordファイルを管理しながら仕事をしているのを見て、一括で管理する方法を提案した。
制約としてDBサーバーを立てられないため、そして、保守面を考慮したため、データベースはクラウドのSharePointに配置し、アプリケーションファイルを配布する方法を取っている。
当該sharepointにアクセスできる職員しか管理情報にアクセスできない。
効果 まだ管理情報を入力し終わった段階であるので効果は不明。ただ、正しい形でデータを保管しているので業務上必要な情報を迅速に抽出できる。またAccessのレポート機能で、例えば教育実習先に送る依頼状なども簡単に作成可能となった。</description>
      <content>&lt;p&gt;&lt;img src=&#34;https://amomoan.github.io/portfolio/portfolio/img/kyoshoku.png&#34; alt=&#34;教職&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;担当者が多くのExcelやWordファイルを管理しながら仕事をしているのを見て、一括で管理する方法を提案した。&lt;/p&gt;
&lt;p&gt;制約としてDBサーバーを立てられないため、そして、保守面を考慮したため、データベースはクラウドのSharePointに配置し、アプリケーションファイルを配布する方法を取っている。&lt;/p&gt;
&lt;p&gt;当該sharepointにアクセスできる職員しか管理情報にアクセスできない。&lt;/p&gt;
&lt;h2 id=&#34;効果&#34;&gt;効果&lt;/h2&gt;
&lt;p&gt;まだ管理情報を入力し終わった段階であるので効果は不明。ただ、正しい形でデータを保管しているので業務上必要な情報を迅速に抽出できる。またAccessのレポート機能で、例えば教育実習先に送る依頼状なども簡単に作成可能となった。&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>就職管理システム</title>
      <link>https://amomoan.github.io/portfolio/posts/recruit_manager/</link>
      <pubDate>Mon, 03 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://amomoan.github.io/portfolio/posts/recruit_manager/</guid>
      <description>概要 担当課から相談を受け２つのキャンパスで２回制作。初回はAccessで開発したが担当課では保守ができず、あまり使ってもらえなかった。
反省を生かし２回目はExcelで作成。マクロは使用せずテーブル設計を工夫し、関数を用い担当者でメンテナンスできるように工夫した。その結果現在でも使用されている。
相談内容 (2度目の成功事例) 企業訪問を受けた際、従来Excelフォーマット（単票形式）に担当者がその内容を記録していた。それを印刷してファイリングしていて、後からその情報を閲覧するときにはファイルの内容を探す手段がとられていた。
また、学生の就職先は別のシステムで管理されており、担当者によって企業名の入力が異なるため、データを結合しづらい状況があった。
私が業務改善を行っていることを知っていたキャリアセンター職員から相談を受け改善することになった。
検討 1度目は就職先管理をAccessで行うことが目的だったが、Accessの運用は担当職員にはハードルが高く、また、自分が所属している部署ではなかったため、サポートがしづらい状況だった。そのため、管理システムは完成したが運用してもらえなかった苦い経験があった。
反省点と改善点
Excelで完結する 担当者がメンテナンスできるようにする（持続可能性） マクロは使わない なるべく簡単なシート関数で実装する 作成 要件定義：作りこむ前に簡単に作成してみて担当者にヒアリングした。機能の過不足について調査。 作成：データベース部分のシートと個別帳票シートに分けて、Lookup関数で参照するように作成。メンテナンスしやすいように正規化は最小限に留めた。印刷する必要もあるとのことだった。 納品：担当者とその上司に実際にサンプルデータで説明を行う。 データ移行：今までの各担当者が蓄積していた微妙に違う帳票内容をクレンジングしてデータ移行した。 効果 入力する項目数は同じため入力に要する時間はあまり変わらない。ただし、誰が入力しても同じようなデータになる。
効果を発揮するのは後でそのデータを抽出するとき。データベースシートから容易に抽出できる。
検索時間：30分 → 10秒</description>
      <content>&lt;p&gt;&lt;img src=&#34;https://amomoan.github.io/portfolio/portfolio/img/recruit.png&#34; alt=&#34;リクルート&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;担当課から相談を受け２つのキャンパスで２回制作。初回はAccessで開発したが担当課では保守ができず、あまり使ってもらえなかった。&lt;/p&gt;
&lt;p&gt;反省を生かし２回目はExcelで作成。マクロは使用せずテーブル設計を工夫し、関数を用い担当者でメンテナンスできるように工夫した。その結果現在でも使用されている。&lt;/p&gt;
&lt;h3 id=&#34;相談内容-2度目の成功事例&#34;&gt;相談内容 (2度目の成功事例)&lt;/h3&gt;
&lt;p&gt;企業訪問を受けた際、従来Excelフォーマット（単票形式）に担当者がその内容を記録していた。それを印刷してファイリングしていて、後からその情報を閲覧するときにはファイルの内容を探す手段がとられていた。&lt;/p&gt;
&lt;p&gt;また、学生の就職先は別のシステムで管理されており、担当者によって企業名の入力が異なるため、データを結合しづらい状況があった。&lt;/p&gt;
&lt;p&gt;私が業務改善を行っていることを知っていたキャリアセンター職員から相談を受け改善することになった。&lt;/p&gt;
&lt;h2 id=&#34;検討&#34;&gt;検討&lt;/h2&gt;
&lt;p&gt;1度目は就職先管理をAccessで行うことが目的だったが、Accessの運用は担当職員にはハードルが高く、また、自分が所属している部署ではなかったため、サポートがしづらい状況だった。そのため、管理システムは完成したが運用してもらえなかった苦い経験があった。&lt;/p&gt;
&lt;p&gt;反省点と改善点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Excelで完結する&lt;/li&gt;
&lt;li&gt;担当者がメンテナンスできるようにする（持続可能性）
&lt;ul&gt;
&lt;li&gt;マクロは使わない&lt;/li&gt;
&lt;li&gt;なるべく簡単なシート関数で実装する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;作成&#34;&gt;作成&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;要件定義：作りこむ前に簡単に作成してみて担当者にヒアリングした。機能の過不足について調査。&lt;/li&gt;
&lt;li&gt;作成：データベース部分のシートと個別帳票シートに分けて、Lookup関数で参照するように作成。メンテナンスしやすいように正規化は最小限に留めた。印刷する必要もあるとのことだった。&lt;/li&gt;
&lt;li&gt;納品：担当者とその上司に実際にサンプルデータで説明を行う。&lt;/li&gt;
&lt;li&gt;データ移行：今までの各担当者が蓄積していた微妙に違う帳票内容をクレンジングしてデータ移行した。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;効果&#34;&gt;効果&lt;/h2&gt;
&lt;p&gt;入力する項目数は同じため入力に要する時間はあまり変わらない。ただし、誰が入力しても同じようなデータになる。&lt;/p&gt;
&lt;p&gt;効果を発揮するのは後でそのデータを抽出するとき。データベースシートから容易に抽出できる。&lt;/p&gt;
&lt;p&gt;検索時間：30分 → 10秒&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>成績不振者抽出ツール</title>
      <link>https://amomoan.github.io/portfolio/posts/bad_score_checker/</link>
      <pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://amomoan.github.io/portfolio/posts/bad_score_checker/</guid>
      <description>概要 成績不振者には退学を勧告する制度がある。誤った勧告は許されないため、慎重な判定が必要だった。
それまでの担当者が「秘伝のたれ」のようにExcelを継ぎ足して対応していた。そのためExcelのガラパゴス化がひどく解読するのも一苦労だった。 教務システムから成績を抽出し、そのExcelに取り込んで複雑なマニュアル操作によって何故か判定結果が出るのである。 結局それが正しいか成績表を出力して確認するので作り変えることになった。
判定条件は論理的に解釈できるものであったので、当時（2016年）勉強を始めたSQLで判定することとした。 SQLはAccessで実行した。
教務システムから出力したExcelファイルをAccessにインポートしてクエリを発行する流れである。 当然判定は正確に行われた。
その後別の部署に異動した。
システム入れ替えに伴いベンダーと仕様調整を行っていた2022年に私の作った判定システムが今も現役で稼働していることを知ってうれしくなった。
効果 1～2週間　→　3分 程度</description>
      <content>&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;成績不振者には退学を勧告する制度がある。誤った勧告は許されないため、慎重な判定が必要だった。&lt;/p&gt;
&lt;p&gt;それまでの担当者が「秘伝のたれ」のようにExcelを継ぎ足して対応していた。そのためExcelのガラパゴス化がひどく解読するのも一苦労だった。
教務システムから成績を抽出し、そのExcelに取り込んで複雑なマニュアル操作によって何故か判定結果が出るのである。
結局それが正しいか成績表を出力して確認するので作り変えることになった。&lt;/p&gt;
&lt;p&gt;判定条件は論理的に解釈できるものであったので、当時（2016年）勉強を始めたSQLで判定することとした。
SQLはAccessで実行した。&lt;/p&gt;
&lt;p&gt;教務システムから出力したExcelファイルをAccessにインポートしてクエリを発行する流れである。
当然判定は正確に行われた。&lt;/p&gt;
&lt;p&gt;その後別の部署に異動した。&lt;/p&gt;
&lt;p&gt;システム入れ替えに伴いベンダーと仕様調整を行っていた2022年に私の作った判定システムが今も現役で稼働していることを知ってうれしくなった。&lt;/p&gt;
&lt;h2 id=&#34;効果&#34;&gt;効果&lt;/h2&gt;
&lt;p&gt;1～2週間　→　3分 程度&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
