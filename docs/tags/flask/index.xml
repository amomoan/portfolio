<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flask on YAMAMOTO MASAHIRO</title>
    <link>https://amomoan.github.io/portfolio/tags/flask/</link>
    <description>Recent content in Flask on YAMAMOTO MASAHIRO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 19 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://amomoan.github.io/portfolio/tags/flask/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Teacher_ability</title>
      <link>https://amomoan.github.io/portfolio/posts/teacher_ability/</link>
      <pubDate>Wed, 19 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://amomoan.github.io/portfolio/posts/teacher_ability/</guid>
      <description>概要 大学には教職課程に関して「学力に関する証明書」という証明書がある。これは文部科学省が様式を公開しており、決まったルールどおりに入力する必要がある。 しかし、入学した年度や各種条件により現行法の科目に読み替える必要がある。
この操作は大変複雑で、かつ、法改正が高頻度であるため、本証明書もそれに対応するため様式を変更する必要がる。とても流動的な証明書である。 多くの大学では、この証明書の発行に多大な労力を払っている。
この証明書を発行するために今までは以下の手順を踏んでいた。
成績証明書を出力 当時の講義要項を印刷 読替表を印刷 読替のチェック（蛍光ペンで紙にマーク） その結果を文部科学省の様式に転記 備考欄に特記事項を記載 以上5までのステップはロジカルなものであるため、機械化できると判断した。
当初Excelで完結するつもりだったが、これまでの成績データが 110万件を超えたため断念。 職場の制約を満たすため、成績データや個人情報などはDB化しNASに配置し、ローカルホストでサーバーを立ち上げウェブアプリからDBに接続する方法を採用した。
機密情報があるためコードは公開できないが、上記の5までのステップは1分かからず実行可能。 また、確認資料とできるように生データに近い形をExcelのシートに書き出すように工夫した。 ただし、成績情報が電子データとして保存されている場合に限定される。
効果 3時間　→　1分未満 正確性の向上</description>
      <content>&lt;p&gt;&lt;img src=&#34;https://amomoan.github.io/portfolio/portfolio/img/gakuryoku.png&#34; alt=&#34;学力に関する証明書システム&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;大学には教職課程に関して「学力に関する証明書」という証明書がある。これは文部科学省が様式を公開しており、決まったルールどおりに入力する必要がある。
しかし、入学した年度や各種条件により現行法の科目に読み替える必要がある。&lt;/p&gt;
&lt;p&gt;この操作は大変複雑で、かつ、法改正が高頻度であるため、本証明書もそれに対応するため様式を変更する必要がる。とても流動的な証明書である。
多くの大学では、この証明書の発行に多大な労力を払っている。&lt;/p&gt;
&lt;p&gt;この証明書を発行するために今までは以下の手順を踏んでいた。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;成績証明書を出力&lt;/li&gt;
&lt;li&gt;当時の講義要項を印刷&lt;/li&gt;
&lt;li&gt;読替表を印刷&lt;/li&gt;
&lt;li&gt;読替のチェック（蛍光ペンで紙にマーク）&lt;/li&gt;
&lt;li&gt;その結果を文部科学省の様式に転記&lt;/li&gt;
&lt;li&gt;備考欄に特記事項を記載&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上5までのステップはロジカルなものであるため、機械化できると判断した。&lt;/p&gt;
&lt;p&gt;当初Excelで完結するつもりだったが、これまでの成績データが 110万件を超えたため断念。
職場の制約を満たすため、成績データや個人情報などはDB化しNASに配置し、ローカルホストでサーバーを立ち上げウェブアプリからDBに接続する方法を採用した。&lt;/p&gt;
&lt;p&gt;機密情報があるためコードは公開できないが、上記の5までのステップは1分かからず実行可能。
また、確認資料とできるように生データに近い形をExcelのシートに書き出すように工夫した。
ただし、成績情報が電子データとして保存されている場合に限定される。&lt;/p&gt;
&lt;h2 id=&#34;効果&#34;&gt;効果&lt;/h2&gt;
&lt;p&gt;3時間　→　1分未満
正確性の向上&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
