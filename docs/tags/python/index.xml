<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on YAMAMOTO MASAHIRO</title>
    <link>https://amomoan.github.io/portfolio/tags/python/</link>
    <description>Recent content in Python on YAMAMOTO MASAHIRO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 19 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://amomoan.github.io/portfolio/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>学力に関する証明書作成アプリ</title>
      <link>https://amomoan.github.io/portfolio/posts/teacher_ability/</link>
      <pubDate>Wed, 19 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://amomoan.github.io/portfolio/posts/teacher_ability/</guid>
      <description>概要 大学には教職課程に関して「学力に関する証明書」という証明書がある。これは文部科学省が様式を公開しており、決まったルールどおりに入力する必要がある。 しかし、入学した年度や各種条件により現行法の科目に読み替える必要がある。
この操作は大変複雑で、かつ、法改正が高頻度であるため、本証明書もそれに対応するため様式を変更する必要がる。とても流動的な証明書である。 多くの大学では、この証明書の発行に多大な労力を払っている。
この証明書を発行するために今までは以下の手順を踏んでいた。
成績証明書を出力 当時の講義要項を印刷 読替表を印刷 読替のチェック（蛍光ペンで紙にマーク） その結果を文部科学省の様式に転記 備考欄に特記事項を記載 以上5までのステップはロジカルなものであるため、機械化できると判断した。
当初Excelで完結するつもりだったが、これまでの成績データが 110万件を超えたため断念。 職場の制約を満たすため、成績データや個人情報などはDB化しNASに配置し、ローカルホストでサーバーを立ち上げウェブアプリからDBに接続する方法を採用した。
機密情報があるためコードは公開できないが、上記の5までのステップは1分かからず実行可能。 また、確認資料とできるように生データに近い形をExcelのシートに書き出すように工夫した。 ただし、成績情報が電子データとして保存されている場合に限定される。
効果 3時間　→　1分未満 正確性の向上</description>
      <content>&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;大学には教職課程に関して「学力に関する証明書」という証明書がある。これは文部科学省が様式を公開しており、決まったルールどおりに入力する必要がある。
しかし、入学した年度や各種条件により現行法の科目に読み替える必要がある。&lt;/p&gt;
&lt;p&gt;この操作は大変複雑で、かつ、法改正が高頻度であるため、本証明書もそれに対応するため様式を変更する必要がる。とても流動的な証明書である。
多くの大学では、この証明書の発行に多大な労力を払っている。&lt;/p&gt;
&lt;p&gt;この証明書を発行するために今までは以下の手順を踏んでいた。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;成績証明書を出力&lt;/li&gt;
&lt;li&gt;当時の講義要項を印刷&lt;/li&gt;
&lt;li&gt;読替表を印刷&lt;/li&gt;
&lt;li&gt;読替のチェック（蛍光ペンで紙にマーク）&lt;/li&gt;
&lt;li&gt;その結果を文部科学省の様式に転記&lt;/li&gt;
&lt;li&gt;備考欄に特記事項を記載&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上5までのステップはロジカルなものであるため、機械化できると判断した。&lt;/p&gt;
&lt;p&gt;当初Excelで完結するつもりだったが、これまでの成績データが 110万件を超えたため断念。
職場の制約を満たすため、成績データや個人情報などはDB化しNASに配置し、ローカルホストでサーバーを立ち上げウェブアプリからDBに接続する方法を採用した。&lt;/p&gt;
&lt;p&gt;機密情報があるためコードは公開できないが、上記の5までのステップは1分かからず実行可能。
また、確認資料とできるように生データに近い形をExcelのシートに書き出すように工夫した。
ただし、成績情報が電子データとして保存されている場合に限定される。&lt;/p&gt;
&lt;h2 id=&#34;効果&#34;&gt;効果&lt;/h2&gt;
&lt;p&gt;3時間　→　1分未満
正確性の向上&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>教室帳票変換ツール</title>
      <link>https://amomoan.github.io/portfolio/posts/room_schedule/</link>
      <pubDate>Wed, 05 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://amomoan.github.io/portfolio/posts/room_schedule/</guid>
      <description>概要 教務システムから出力されたExcelファイル（単票形式）からマトリクス表形式のExcelファイルに変換する。教室の利用状況を総覧する帳票がなく緊急で教室変更などを行う必要が出たときに確認に時間がかかっていた。マトリクス形式に変換することですぐ状況を確認できるようになり、業務が改善した。
githubでコードを公開しています。
効果 空いている教室の利用状況を確認するのに要していた時間の短縮
10　→　2分 /人・回
スタッフ数30人
詳細 dist/roomSchedule.exeを配布しています。
コードの説明 このPythonコードは、学務システムから出力される施設予約と講義のスケジュールが記載されたファイル&amp;quot;施設予約.xlsx&amp;quot;を、時間割表のような形でExcelに書き出すためのものです。 施設予約.xlsxは非常に見づらく日々発生する教室確認作業が滞るため作成しました。
使い方 プログラムを起動します。 「施設予約ファイルを選択」ウィンドウが表示されますので、対象のExcelファイル&amp;quot;施設予約.xlsx&amp;quot;を選択します。 処理が完了すると、指定したExcelファイルと同じディレクトリに結果が出力されます。 必要なライブラリ os sys pandas datetime time numpy tkinter tqdm styleframe 処理の流れ 施設予約ファイルを選択する 施設予約ファイルを読み込む 予約区分=&amp;ldquo;施設予約&amp;quot;の各予約に対して時限を割り当てたデータフレームを作成 予約区分=&amp;ldquo;講義&amp;quot;のデータフレームを作成 施設予約と講義のデータフレームを結合する。 時間割表のような枠だけのデータフレームを作成。 5のデータフレームのデータを6に転記する。 Excelファイルに書き込む。 </description>
      <content>&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;教務システムから出力されたExcelファイル（単票形式）からマトリクス表形式のExcelファイルに変換する。教室の利用状況を総覧する帳票がなく緊急で教室変更などを行う必要が出たときに確認に時間がかかっていた。マトリクス形式に変換することですぐ状況を確認できるようになり、業務が改善した。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/amomoan/roomSchedule&#34;&gt;github&lt;/a&gt;でコードを公開しています。&lt;/p&gt;
&lt;h2 id=&#34;効果&#34;&gt;効果&lt;/h2&gt;
&lt;p&gt;空いている教室の利用状況を確認するのに要していた時間の短縮&lt;/p&gt;
&lt;p&gt;10　→　2分 /人・回&lt;/p&gt;
&lt;p&gt;スタッフ数30人&lt;/p&gt;
&lt;h2 id=&#34;詳細&#34;&gt;詳細&lt;/h2&gt;
&lt;p&gt;dist/roomSchedule.exeを配布しています。&lt;/p&gt;
&lt;h3 id=&#34;コードの説明&#34;&gt;コードの説明&lt;/h3&gt;
&lt;p&gt;このPythonコードは、学務システムから出力される施設予約と講義のスケジュールが記載されたファイル&amp;quot;施設予約.xlsx&amp;quot;を、時間割表のような形でExcelに書き出すためのものです。
施設予約.xlsxは非常に見づらく日々発生する教室確認作業が滞るため作成しました。&lt;/p&gt;
&lt;h3 id=&#34;使い方&#34;&gt;使い方&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;プログラムを起動します。&lt;/li&gt;
&lt;li&gt;「施設予約ファイルを選択」ウィンドウが表示されますので、対象のExcelファイル&amp;quot;施設予約.xlsx&amp;quot;を選択します。&lt;/li&gt;
&lt;li&gt;処理が完了すると、指定したExcelファイルと同じディレクトリに結果が出力されます。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;必要なライブラリ&#34;&gt;必要なライブラリ&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;os&lt;/li&gt;
&lt;li&gt;sys&lt;/li&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;li&gt;datetime&lt;/li&gt;
&lt;li&gt;time&lt;/li&gt;
&lt;li&gt;numpy&lt;/li&gt;
&lt;li&gt;tkinter&lt;/li&gt;
&lt;li&gt;tqdm&lt;/li&gt;
&lt;li&gt;styleframe&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;処理の流れ&#34;&gt;処理の流れ&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;施設予約ファイルを選択する&lt;/li&gt;
&lt;li&gt;施設予約ファイルを読み込む&lt;/li&gt;
&lt;li&gt;予約区分=&amp;ldquo;施設予約&amp;quot;の各予約に対して時限を割り当てたデータフレームを作成&lt;/li&gt;
&lt;li&gt;予約区分=&amp;ldquo;講義&amp;quot;のデータフレームを作成&lt;/li&gt;
&lt;li&gt;施設予約と講義のデータフレームを結合する。&lt;/li&gt;
&lt;li&gt;時間割表のような枠だけのデータフレームを作成。&lt;/li&gt;
&lt;li&gt;5のデータフレームのデータを6に転記する。&lt;/li&gt;
&lt;li&gt;Excelファイルに書き込む。&lt;/li&gt;
&lt;/ol&gt;
</content>
    </item>
    
  </channel>
</rss>
